# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  TEST_OUTPU_DIR = "./build/iOSBuild"
  IPA_NAME = "myapp.ipa"
  desc "Push a new beta build to TestFlight"
  lane :updateVersionings do |options|
    increment_build_number(
      build_number: options[:run_number].to_i
    )
  
    # increment_version_number_in_xcodeproj(
    #   version_number: "#{options[:current_version]}" # Set a specific version number
    # )
  end
  
    lane :beta do
       setup_ci
    clear_derived_data
    # add actions here: https://docs.fastlane.tools/actions
    increment_build_number(xcodeproj: "TestUpload.xcodeproj")
    build_app(
      clean: true,
      include_symbols: true,
      scheme: "SoundMate",
      workspace: "TestUpload.xcworkspace",
      include_bitcode: false,
      configuration: "Release",
      export_method: "app-store",
      xcargs: "-allowProvisioningUpdates",
      output_directory: TEST_OUTPU_DIR,
      output_name: IPA_NAME
    )
  end

  lane :beta_testflight do
    setup_ci
    clear_derived_data
   api_key = app_store_connect_api_key(
      key_id: ENV["APP_STORE_CONNECT_API_KEY_KEY_ID"],
      issuer_id: ENV["APP_STORE_CONNECT_API_KEY_ISSUER_ID"],
      key_content: ENV["APP_STORE_CONNECT_API_KEY_KEY"]
    )
    # add actions here: https://docs.fastlane.tools/actions
    match(api_key:api_key,git_branch: "master", type: "appstore", app_identifier: ["com.yangang.rtmppush"])

      increment_build_number(
        build_number: (latest_testflight_build_number(
          app_identifier: "com.yangang.rtmppush",
          api_key: api_key,
          team_name: "gang yan",
        ) + 1).to_s,
      )
    build_app(
      export_method: "app-store",
      workspace: "TestUpload.xcworkspace",
      scheme: "TestUpload")
    upload_to_testflight(api_key: api_key,skip_submission: true)
  end
end
